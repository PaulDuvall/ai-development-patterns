<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="3" skipped="0" tests="10" time="0.033" timestamp="2025-07-30T20:34:02.117082-04:00" hostname="Zenith"><testcase classname="test_readme_accuracy.TestReadmeAccuracy" name="test_pattern_reference_table_matches_implementations" time="0.002" /><testcase classname="test_readme_accuracy.TestReadmeAccuracy" name="test_pattern_count_consistency" time="0.002"><failure message="AssertionError: Expected at least 5 Foundation patterns, found 0&#10;assert 0 &gt;= 5&#10; +  where 0 = len([])">test_readme_accuracy.py:54: in test_pattern_count_consistency
    assert len(foundation_patterns) &gt;= 5, \
E   AssertionError: Expected at least 5 Foundation patterns, found 0
E   assert 0 &gt;= 5
E    +  where 0 = len([])</failure></testcase><testcase classname="test_readme_accuracy.TestReadmeAccuracy" name="test_maturity_level_distribution" time="0.002" /><testcase classname="test_readme_accuracy.TestReadmeAccuracy" name="test_pattern_organization_structure" time="0.000"><failure message="AssertionError: Pattern sections not in correct order. Expected: ['Foundation Patterns', 'Development Patterns', 'Operations Patterns'], Found: []&#10;assert [] == ['Foundation ...ons Patterns']&#10;  &#10;  Right contains 3 more items, first extra item: 'Foundation Patterns'&#10;  &#10;  Full diff:&#10;  + []&#10;  - [&#10;  -     'Foundation Patterns',...&#10;  &#10;  ...Full output truncated (3 lines hidden), use '-vv' to show">test_readme_accuracy.py:92: in test_pattern_organization_structure
    assert found_sections == expected_order, \
E   AssertionError: Pattern sections not in correct order. Expected: ['Foundation Patterns', 'Development Patterns', 'Operations Patterns'], Found: []
E   assert [] == ['Foundation ...ons Patterns']
E     
E     Right contains 3 more items, first extra item: 'Foundation Patterns'
E     
E     Full diff:
E     + []
E     - [
E     -     'Foundation Patterns',...
E     
E     ...Full output truncated (3 lines hidden), use '-vv' to show</failure></testcase><testcase classname="test_readme_accuracy.TestReadmeAccuracy" name="test_dependency_references_exist" time="0.000" /><testcase classname="test_readme_accuracy.TestReadmeAccuracy" name="test_mermaid_diagrams_syntax" time="0.000" /><testcase classname="test_readme_accuracy.TestReadmeAccuracy" name="test_code_block_language_tags" time="0.000" /><testcase classname="test_readme_accuracy.TestReadmeAccuracy" name="test_pattern_naming_consistency" time="0.002" /><testcase classname="test_readme_accuracy.TestReadmeAccuracy" name="test_anti_pattern_completeness" time="0.002"><failure message="AssertionError: Patterns with insufficient anti-pattern content: [{'pattern': 'AI Readiness Assessment', 'content_length': 0}, {'pattern': 'AI Issue Generation', 'content_length': 0}, {'pattern': 'Specification Driven Development', 'content_length': 0}, {'pattern': 'Constraint-Based AI Development', 'content_length': 0}, {'pattern': 'AI-Driven Refactoring', 'content_length': 0}]&#10;assert not [{'content_length': 0, 'pattern': 'AI Readiness Assessment'}, {'content_length': 0, 'pattern': 'AI Issue Generation'}, {'content_length': 0, 'pattern': 'Specification Driven Development'}, {'content_length': 0, 'pattern': 'Constraint-Based AI Development'}, {'content_length': 0, 'pattern': 'AI-Driven Refactoring'}]">test_readme_accuracy.py:233: in test_anti_pattern_completeness
    assert not insufficient_anti_patterns, \
E   AssertionError: Patterns with insufficient anti-pattern content: [{'pattern': 'AI Readiness Assessment', 'content_length': 0}, {'pattern': 'AI Issue Generation', 'content_length': 0}, {'pattern': 'Specification Driven Development', 'content_length': 0}, {'pattern': 'Constraint-Based AI Development', 'content_length': 0}, {'pattern': 'AI-Driven Refactoring', 'content_length': 0}]
E   assert not [{'content_length': 0, 'pattern': 'AI Readiness Assessment'}, {'content_length': 0, 'pattern': 'AI Issue Generation'}, {'content_length': 0, 'pattern': 'Specification Driven Development'}, {'content_length': 0, 'pattern': 'Constraint-Based AI Development'}, {'content_length': 0, 'pattern': 'AI-Driven Refactoring'}]</failure></testcase><testcase classname="test_readme_accuracy.TestReadmeAccuracy" name="test_examples_directory_references" time="0.000" /></testsuite></testsuites>